{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\poket\\\\Desktop\\\\\\uCE74\\uC774\\uC2A4\\uD2B8\\\\SPARCS\\\\defresne_newbie_project\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FileBase from 'react-file-base64';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch } from 'react-redux'; //font등 styles 불러오기\n\nimport useStyles from './styles';\nimport { createPost } from '../../actions/posts'; //component 생성\n\nconst Form = () => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch(); //event handler라고 보면됨\n\n  const handleSubmit = e => {\n    //화면의 새로고침을 막는 것\n    e.preventDefault();\n    dispatch(createPost(postData));\n  };\n\n  const clear = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        varient: \"h6\",\n        children: \"Creating a Memory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        varient: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        varient: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        varient: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        varient: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: [\" \", /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 55\n        }, this), \"             \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        varient: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        varient: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"yaQArD0oRtGSe80MNkzqh2vzE2o=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/poket/Desktop/카이스트/SPARCS/defresne_newbie_project/client/src/components/Form/Form.js"],"names":["React","useState","FileBase","TextField","Button","Typography","Paper","useDispatch","useStyles","createPost","Form","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport FileBase from 'react-file-base64';\r\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//font등 styles 불러오기\r\nimport useStyles from './styles';\r\nimport { createPost } from '../../actions/posts';\r\n\r\n//component 생성\r\nconst Form = () => {\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    //event handler라고 보면됨\r\n    const handleSubmit = (e) => {\r\n        //화면의 새로고침을 막는 것\r\n        e.preventDefault();\r\n        dispatch(createPost(postData));\r\n    }\r\n    const clear = () => {\r\n\r\n    }\r\n\r\n    return(\r\n        <Paper className = {classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className = {`${classes.root} ${classes.form}`} onSubmit = {handleSubmit}>\r\n                <Typography varient=\"h6\">\r\n                    Creating a Memory\r\n                </Typography>\r\n                <TextField name=\"creator\" varient=\"outlined\" label=\"Creator\" fullWidth value = {postData.creator} onChange = {(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n                <TextField name=\"title\" varient=\"outlined\" label=\"Title\" fullWidth value = {postData.title} onChange = {(e) => setPostData({ ...postData, title: e.target.value })} />\r\n                <TextField name=\"message\" varient=\"outlined\" label=\"Message\" fullWidth value = {postData.message} onChange = {(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                <TextField name=\"tags\" varient=\"outlined\" label=\"Tags\" fullWidth value = {postData.tags} onChange = {(e) => setPostData({ ...postData, tags: e.target.value })} />\r\n                <div className = {classes.fileInput}> <FileBase type = \"file\" multiple = {false} onDone = {({base64}) => setPostData({ ...postData, selectedFile: base64})} />             </div>\r\n                <Button className={classes.buttonSubmit} varient=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button varient=\"contained\" color=\"secondary\" size=\"small\" onClick = { clear } fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}