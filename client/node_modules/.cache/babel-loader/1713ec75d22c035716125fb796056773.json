{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\poket\\\\Desktop\\\\\\uCE74\\uC774\\uC2A4\\uD2B8\\\\SPARCS\\\\defresne_newbie_project\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FileBase from 'react-file-base64';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux'; //font등 styles 불러오기\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts'; //component 생성\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  //data형식 지정\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null); //...클릭시 정보가 다시 form에 담긴다.\n\n  useEffect(() => {\n    //post가 null이 아닌경우\n    if (post) setPostData(post);\n  }, [post]); //event handler라고 보면됨\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = e => {\n    //화면의 새로고침을 막는 것\n    e.preventDefault(); //currentId가 null이 아니면\n\n    if (currentId) dispatch(updatePost(currentId, postData));else dispatch(createPost(postData));\n    clear();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        varient: \"h5\",\n        children: \"\\uAE30\\uC5B5\\uC5D0 \\uB0A8\\uB294 \\uC21C\\uAC04\\uC744 \\uAE30\\uB85D\\uD558\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        varient: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        varient: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        varient: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        varient: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: [\" \", /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 55\n        }, this), \"             \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        varient: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        varient: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"L8u92QbMria081h7wany/qNkNvA=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/poket/Desktop/카이스트/SPARCS/defresne_newbie_project/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","FileBase","TextField","Button","Typography","Paper","useDispatch","useSelector","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","classes","dispatch","post","state","posts","find","p","_id","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FileBase from 'react-file-base64';\r\nimport { TextField, Button, Typography, Paper} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//font등 styles 불러오기\r\nimport useStyles from './styles';\r\n\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\n//component 생성\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    //data형식 지정\r\n    const [postData, setPostData] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    });\r\n\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const post = useSelector((state) => (currentId ? state.posts.find((p) => p._id === currentId) : null));\r\n\r\n    //...클릭시 정보가 다시 form에 담긴다.\r\n    useEffect(() => {\r\n        //post가 null이 아닌경우\r\n        if(post)\r\n            setPostData(post);\r\n    }, [post])\r\n\r\n    //event handler라고 보면됨\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        //화면의 새로고침을 막는 것\r\n        e.preventDefault();\r\n\r\n        //currentId가 null이 아니면\r\n        if(currentId)\r\n            dispatch(updatePost(currentId, postData));\r\n        else\r\n            dispatch(createPost(postData));\r\n\r\n        clear();\r\n    }\r\n\r\n    return(\r\n        <Paper className = {classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className = {`${classes.root} ${classes.form}`} onSubmit = {handleSubmit}>\r\n                <Typography varient=\"h5\">\r\n                    기억에 남는 순간을 기록하세요\r\n                </Typography>\r\n                <TextField name=\"creator\" varient=\"outlined\" label=\"Creator\" fullWidth value = {postData.creator} onChange = {(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n                <TextField name=\"title\" varient=\"outlined\" label=\"Title\" fullWidth value = {postData.title} onChange = {(e) => setPostData({ ...postData, title: e.target.value })} />\r\n                <TextField name=\"message\" varient=\"outlined\" label=\"Message\" fullWidth value = {postData.message} onChange = {(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                <TextField name=\"tags\" varient=\"outlined\" label=\"Tags\" fullWidth value = {postData.tags} onChange = {(e) => setPostData({ ...postData, tags: e.target.value })} />\r\n                <div className = {classes.fileInput}> <FileBase type = \"file\" multiple = {false} onDone = {({base64}) => setPostData({ ...postData, selectedFile: base64})} />             </div>\r\n                <Button className={classes.buttonSubmit} varient=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button varient=\"contained\" color=\"secondary\" size=\"small\" onClick = { clear } fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}